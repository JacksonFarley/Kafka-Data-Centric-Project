[2019-12-04 22:04:20,607] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=1, isr=0,1, zkVersion=1, replicas=0,2,1, isNew=false) correlation id 6 from controller 0 epoch 4 for partition my-replicated-topic-0 (state.change.logger)
[2019-12-04 22:04:20,607] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 6 from controller 0 epoch 4 starting the become-follower transition for partition my-replicated-topic-0 with leader 0 (state.change.logger)
[2019-12-04 22:04:20,608] TRACE [Broker id=1] Stopped fetchers as part of become-follower request from controller 0 epoch 4 with correlation id 6 for partition my-replicated-topic-0 with leader 0 (state.change.logger)
[2019-12-04 22:04:20,609] TRACE [Broker id=1] Truncated logs and checkpointed recovery boundaries for partition my-replicated-topic-0 as part of become-follower request with correlation id 6 from controller 0 epoch 4 with leader 0 (state.change.logger)
[2019-12-04 22:04:20,609] TRACE [Broker id=1] Started fetcher to new leader as part of become-follower request from controller 0 epoch 4 with correlation id 6 for partition my-replicated-topic-0 with leader 0 (state.change.logger)
[2019-12-04 22:04:20,609] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 6 from controller 0 epoch 4 for the become-follower transition for partition my-replicated-topic-0 with leader 0 (state.change.logger)
[2019-12-04 22:04:20,627] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=1, isr=[0, 1], zkVersion=1, replicas=[0, 2, 1], offlineReplicas=[2]) for partition my-replicated-topic-0 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 7 (state.change.logger)
[2019-12-04 22:04:21,962] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=0, leaderEpoch=1, isr=0,1, zkVersion=1, replicas=0,2,1, isNew=false) correlation id 8 from controller 0 epoch 4 for partition my-replicated-topic-0 (state.change.logger)
[2019-12-04 22:04:21,963] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 0 with correlation id 8 epoch 4 for partition my-replicated-topic-0 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2019-12-04 22:04:21,975] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition connect-test-0 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 9 (state.change.logger)
[2019-12-04 22:04:21,975] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=0, leaderEpoch=1, isr=[0, 1], zkVersion=1, replicas=[0, 2, 1], offlineReplicas=[2]) for partition my-replicated-topic-0 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 9 (state.change.logger)
[2019-12-04 22:04:21,975] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition my-related-topic-0 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 9 (state.change.logger)
[2019-12-04 22:04:25,561] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=1, leaderEpoch=2, isr=1, zkVersion=2, replicas=0,2,1, isNew=false) correlation id 10 from controller 0 epoch 4 for partition my-replicated-topic-0 (state.change.logger)
[2019-12-04 22:04:25,562] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 0 epoch 4 starting the become-leader transition for partition my-replicated-topic-0 (state.change.logger)
[2019-12-04 22:04:25,616] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 10 for partition my-replicated-topic-0 (last update controller epoch 4) (state.change.logger)
[2019-12-04 22:04:25,631] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 0 epoch 4 for the become-leader transition for partition my-replicated-topic-0 (state.change.logger)
[2019-12-04 22:04:25,731] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[0, 2, 1], offlineReplicas=[0, 2]) for partition my-replicated-topic-0 in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 11 (state.change.logger)
[2019-12-04 22:04:26,675] TRACE [Controller id=1 epoch=5] Received response {error_code=0} for request UPDATE_METADATA with correlation id 0 sent to broker kafka-VB:9093 (id: 1 rack: null) (state.change.logger)
[2019-12-04 22:04:26,708] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition my-replicated-topic-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2019-12-04 22:04:26,708] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=4, leader=1, leaderEpoch=2, isr=1, zkVersion=2, replicas=0,2,1, isNew=false) to broker 1 for partition my-replicated-topic-0 (state.change.logger)
[2019-12-04 22:04:26,715] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=4, leader=1, leaderEpoch=2, isr=1, zkVersion=2, replicas=0,2,1, isNew=false) correlation id 1 from controller 1 epoch 5 for partition my-replicated-topic-0 (state.change.logger)
[2019-12-04 22:04:26,715] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 1 epoch 5 for partition my-replicated-topic-0 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2019-12-04 22:04:26,716] TRACE [Controller id=1 epoch=5] Received response {error_code=0,partitions=[{topic=my-replicated-topic,partition=0,error_code=11}]} for request LEADER_AND_ISR with correlation id 1 sent to broker kafka-VB:9093 (id: 1 rack: null) (state.change.logger)
[2019-12-04 22:04:26,717] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=4, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[0, 2, 1], offlineReplicas=[0, 2]) to brokers Set(1) for partition my-replicated-topic-0 (state.change.logger)
[2019-12-04 22:04:26,722] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=4, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[0, 2, 1], offlineReplicas=[0, 2]) for partition my-replicated-topic-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2019-12-04 22:04:26,722] TRACE [Controller id=1 epoch=5] Received response {error_code=0} for request UPDATE_METADATA with correlation id 2 sent to broker kafka-VB:9093 (id: 1 rack: null) (state.change.logger)
[2019-12-04 22:04:26,797] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition my-replicated-topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,797] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition my-related-topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,797] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition connect-test-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,993] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-22 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,993] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-30 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,993] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-8 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,993] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-21 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,994] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-4 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,994] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-27 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,994] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-7 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,994] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-9 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,994] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-46 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,994] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition my-replicated-topic-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,994] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-25 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,994] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-35 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,994] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-41 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,994] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-33 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,994] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-23 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,995] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-49 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,995] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-47 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,995] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-16 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,995] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition test-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,995] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-28 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,995] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-31 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,995] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-36 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,995] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-42 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,995] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-3 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,995] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-18 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,995] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-37 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,996] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-15 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,996] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-24 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,996] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-38 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,996] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-17 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,996] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-48 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,996] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-19 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,996] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-11 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,996] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-13 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,996] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-2 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,996] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-43 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,996] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-6 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,997] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-14 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,997] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-20 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,997] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,997] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-44 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:26,997] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-39 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:27,014] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-12 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:27,014] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-45 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:27,014] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:27,014] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-5 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:27,014] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-26 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:27,014] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-29 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:27,017] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-34 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:27,019] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-10 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:27,019] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-32 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:27,019] TRACE [Controller id=1 epoch=5] Changed state of replica 0 for partition __consumer_offsets-40 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2019-12-04 22:04:27,019] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=5, leader=1, leaderEpoch=2, isr=1, zkVersion=2, replicas=0,2,1, isNew=false) to broker 1 for partition my-replicated-topic-0 (state.change.logger)
[2019-12-04 22:04:27,020] TRACE [Broker id=1] Received LeaderAndIsr request PartitionState(controllerEpoch=5, leader=1, leaderEpoch=2, isr=1, zkVersion=2, replicas=0,2,1, isNew=false) correlation id 3 from controller 1 epoch 5 for partition my-replicated-topic-0 (state.change.logger)
[2019-12-04 22:04:27,020] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition my-replicated-topic-0 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2019-12-04 22:04:27,022] TRACE [Controller id=1 epoch=5] Received response {error_code=0,partitions=[{topic=my-replicated-topic,partition=0,error_code=11}]} for request LEADER_AND_ISR with correlation id 3 sent to broker kafka-VB:9093 (id: 1 rack: null) (state.change.logger)
[2019-12-04 22:04:27,025] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-49 (state.change.logger)
[2019-12-04 22:04:27,025] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-38 (state.change.logger)
[2019-12-04 22:04:27,025] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-16 (state.change.logger)
[2019-12-04 22:04:27,026] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-27 (state.change.logger)
[2019-12-04 22:04:27,026] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-8 (state.change.logger)
[2019-12-04 22:04:27,026] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-19 (state.change.logger)
[2019-12-04 22:04:27,026] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-13 (state.change.logger)
[2019-12-04 22:04:27,026] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-2 (state.change.logger)
[2019-12-04 22:04:27,026] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-35 (state.change.logger)
[2019-12-04 22:04:27,026] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-46 (state.change.logger)
[2019-12-04 22:04:27,026] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-24 (state.change.logger)
[2019-12-04 22:04:27,026] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-5 (state.change.logger)
[2019-12-04 22:04:27,026] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-43 (state.change.logger)
[2019-12-04 22:04:27,026] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-32 (state.change.logger)
[2019-12-04 22:04:27,027] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-21 (state.change.logger)
[2019-12-04 22:04:27,027] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-10 (state.change.logger)
[2019-12-04 22:04:27,027] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-37 (state.change.logger)
[2019-12-04 22:04:27,029] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[0, 2, 1], offlineReplicas=[0, 2]) to brokers Set(1) for partition my-replicated-topic-0 (state.change.logger)
[2019-12-04 22:04:27,029] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-48 (state.change.logger)
[2019-12-04 22:04:27,030] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-40 (state.change.logger)
[2019-12-04 22:04:27,030] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-29 (state.change.logger)
[2019-12-04 22:04:27,030] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-18 (state.change.logger)
[2019-12-04 22:04:27,030] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-7 (state.change.logger)
[2019-12-04 22:04:27,030] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-34 (state.change.logger)
[2019-12-04 22:04:27,030] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-23 (state.change.logger)
[2019-12-04 22:04:27,030] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-45 (state.change.logger)
[2019-12-04 22:04:27,030] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-26 (state.change.logger)
[2019-12-04 22:04:27,030] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers Set(1) for partition my-related-topic-0 (state.change.logger)
[2019-12-04 22:04:27,030] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-4 (state.change.logger)
[2019-12-04 22:04:27,030] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-15 (state.change.logger)
[2019-12-04 22:04:27,030] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-42 (state.change.logger)
[2019-12-04 22:04:27,030] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-31 (state.change.logger)
[2019-12-04 22:04:27,030] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-9 (state.change.logger)
[2019-12-04 22:04:27,030] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-20 (state.change.logger)
[2019-12-04 22:04:27,030] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition test-0 (state.change.logger)
[2019-12-04 22:04:27,030] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-12 (state.change.logger)
[2019-12-04 22:04:27,030] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-1 (state.change.logger)
[2019-12-04 22:04:27,030] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-28 (state.change.logger)
[2019-12-04 22:04:27,030] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-17 (state.change.logger)
[2019-12-04 22:04:27,031] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-6 (state.change.logger)
[2019-12-04 22:04:27,031] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-39 (state.change.logger)
[2019-12-04 22:04:27,037] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-44 (state.change.logger)
[2019-12-04 22:04:27,037] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-36 (state.change.logger)
[2019-12-04 22:04:27,037] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-47 (state.change.logger)
[2019-12-04 22:04:27,037] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-25 (state.change.logger)
[2019-12-04 22:04:27,037] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-3 (state.change.logger)
[2019-12-04 22:04:27,037] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-14 (state.change.logger)
[2019-12-04 22:04:27,038] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-41 (state.change.logger)
[2019-12-04 22:04:27,038] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-30 (state.change.logger)
[2019-12-04 22:04:27,038] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers Set(1) for partition connect-test-0 (state.change.logger)
[2019-12-04 22:04:27,038] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-33 (state.change.logger)
[2019-12-04 22:04:27,038] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-22 (state.change.logger)
[2019-12-04 22:04:27,038] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-11 (state.change.logger)
[2019-12-04 22:04:27,038] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) to brokers Set(1) for partition __consumer_offsets-0 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition connect-test-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=1, leaderEpoch=2, isr=[1], zkVersion=2, replicas=[0, 2, 1], offlineReplicas=[0, 2]) for partition my-replicated-topic-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,044] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition my-related-topic-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition test-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=5, leader=-1, leaderEpoch=1, isr=[0], zkVersion=1, replicas=[0], offlineReplicas=[0]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2019-12-04 22:04:27,045] TRACE [Controller id=1 epoch=5] Received response {error_code=0} for request UPDATE_METADATA with correlation id 4 sent to broker kafka-VB:9093 (id: 1 rack: null) (state.change.logger)
[2019-12-04 22:04:27,318] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,321] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,323] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition my-related-topic-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-related-topic-0 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,323] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,323] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,324] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,324] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,325] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,326] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,326] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,326] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,327] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,329] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,332] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,332] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,333] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,333] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,336] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,336] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition test-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test-0 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,336] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,337] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,337] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,337] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,337] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition connect-test-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition connect-test-0 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,337] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,337] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,337] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,339] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,339] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,342] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,342] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,342] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,342] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,342] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,342] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,342] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,342] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,342] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,343] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,343] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,343] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,343] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,343] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,343] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,343] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,343] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,343] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,343] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,344] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,344] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,344] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,344] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-12-04 22:04:27,344] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:269)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1226)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1543)
	at kafka.controller.KafkaController.process(KafkaController.scala:1584)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
